{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","billionaire","id","name","email","CardList","billionaires","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","bind","fetch","then","response","json","users","setState","e","this","target","value","filteredBillionaires","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iVAGaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBACIC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,YAAYC,GAA5C,6BAEP,mCAAML,EAAMI,YAAYE,KAAxB,OACA,kCAAKN,EAAMI,YAAYG,MAAvB,WCNKC,EAAW,SAAAR,GAAK,OACxB,qBAAKC,UAAU,YAAf,SACID,EAAMS,aAAaC,KAAI,SAAAN,GAAW,OAChC,cAAC,EAAD,CAA2BA,YAAaA,GAA7BA,EAAYC,UCJrBM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAcA,EACdG,SAAWF,MCuCJG,E,kDAxCb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXR,aAAc,GACdS,YAAa,IAGf,EAAKL,aAAc,EAAKA,aAAaM,KAAlB,gBAPP,E,qDAUd,WAAqB,IAAD,OAClBC,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAChB,aAAce,S,0BAElD,SAAaE,GACXC,KAAKF,SAAS,CAAEP,YAAaQ,EAAEE,OAAOC,U,oBAGxC,WACE,MAAoCF,KAAKV,MAAlCR,EAAP,EAAOA,aAAcS,EAArB,EAAqBA,YACfY,EAAuBrB,EAAasB,QAAO,SAAA3B,GAAW,OACxDA,EAAYE,KAAK0B,cAAcC,SAASf,EAAYc,kBAGxD,OAEI,sBAAK/B,UAAU,MAAf,UACE,kDACC,cAAC,EAAD,CACIa,KAAK,SACLF,YAAY,kBACZC,aAAec,KAAKd,eAExB,cAAC,EAAD,CAAUJ,aAAcqB,W,GAnChBI,aCMJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.306c2c26.chunk.js","sourcesContent":["import React from \"react\";\nimport './card.styles.css'\n\nexport const Card = (props) => (\n    <div className='card-container'>\n        <img\n            alt='monster'\n            src={`https://robohash.org/${props.billionaire.id}1?set=set2&size=180x180`}\n        />\n        <h2> {props.billionaire.name} </h2>\n        <p> {props.billionaire.email} </p>\n    </div>\n)","import React from 'react';\nimport './card-list.style.css'\nimport {Card} from \"../card/card.component\";\n\nexport const CardList = props => (\n     <div className='card-list'>\n        {props.billionaires.map(billionaire =>(\n           <Card key={billionaire.id} billionaire={billionaire }/>\n         ))}\n    </div>\n);","import React from \"react\";\nimport './search-box.styles.css';\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n    <input\n        className='search'\n        type='search'\n        placeholder={ placeholder }\n        onChange={ handleChange }\n    />\n);","import React, { Component } from \"react\";\n//import logo from './logo.svg';\nimport './App.css';\nimport {CardList} from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n\nclass  App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      billionaires: [],\n      searchField: ''\n    };\n\n    this.handleChange= this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(users => this.setState({billionaires: users}));\n  }\n  handleChange(e){\n    this.setState({ searchField: e.target.value })\n  }\n\n  render() {\n    const {billionaires, searchField} = this.state;\n    const filteredBillionaires = billionaires.filter(billionaire =>\n        billionaire.name.toLowerCase().includes(searchField.toLowerCase())\n\n    );\n    return (\n\n        <div className=\"App\">\n          <h1>Monsters Rolodex</h1>\n           <SearchBox\n               type='search'\n               placeholder='Search monsters'\n               handleChange={ this.handleChange }\n           />\n           <CardList billionaires={filteredBillionaires}/>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}